/*
   Proto schema for API Demo service
*/

syntax = "proto3";

import "google/api/annotations.proto";
import "google/api/visibility.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "./;demo_rpc_service";

message TestingMessageInside {
  string another_message = 1;
  int32 another_num = 2;
}

message GetDemoRequest {
  string param1 = 3;
  TestingMessageInside param2 = 4;
}

message DemoRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema : {
      title : "DemoRequest: This is DemoReqest which Ayush is using to test."
      description : "This is basically a useless message though."
      required : [ "dummy", "string_value", "double_value" ]
    }
  };
  string dummy = 3
      [ (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description : "The dummy field."
      } ];
}

message GetDemoResponse {
  //   option (google.api.message_visibility).restriction = "INTERNAL";
  string done = 1;
  int32 done_num = 2;
}

message DemoResponse {
  string done = 1;
  int32 done_num = 2 [ (google.api.field_visibility).restriction = "INTERNAL" ];
}

service APIDemo {
  rpc GetDemo(GetDemoRequest) returns (GetDemoResponse) {
    option (google.api.method_visibility).restriction = "INTERNAL";
    option (google.api.http) = {
      get : "/api/v1/demo/get/{param1}"
    };
  }
  rpc PutDemo(DemoRequest) returns (DemoResponse) {
    option (google.api.http) = {
      put : "/api/v1/demo"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation)
        .summary = "This is an indepth summary of what the RPC does. There are "
                   "lots of other fields also.";
  }

  rpc PostDemo(DemoRequest) returns (DemoResponse) {
    option (google.api.http) = {
      post : "/api/v1/demo"
      body : "*"
    };
  }
  rpc DeleteDemo(GetDemoRequest) returns (GetDemoResponse) {
    option (google.api.http) = {
      delete : "/api/v1/demo/delete/{param1}"
    };
  }
}
